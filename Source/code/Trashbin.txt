Trashbin.txt

Triangle tri = t.getFace(0);

			boolean inThisTet = true;
			// Get all of the points to make this quicker
			Vec3 a = tri.a;
			Vec3 b = tri.b;
			Vec3 c = tri.c;

			assert (tri != null);

			Vec3 d = t.getFourthPoint(tri);

			assert(d != null);

			// Alot of this is setup
			D0.set(0, 0, a.x); D0.set(1, 0, a.y); D0.set(2, 0, a.z); D0.set(3, 0, 1.0);
			D0.set(0, 1, b.x); D0.set(1, 1, b.y); D0.set(2, 1, b.z); D0.set(3, 1, 1.0); 
			D0.set(0, 2, c.x); D0.set(1, 2, c.y); D0.set(2, 2, c.z); D0.set(3, 2, 1.0); 
			D0.set(0, 3, d.x); D0.set(1, 3, d.y); D0.set(2, 3, d.z); D0.set(3, 3, 1.0);  

			D1.set(0, 0, point.x); D1.set(1, 0, point.y); D1.set(2, 0, point.z); D1.set(3, 0, 1.0);
			D1.set(0, 1, b.x); D1.set(1, 1, b.y); D1.set(2, 1, b.z); D1.set(3, 1, 1.0); 
			D1.set(0, 2, c.x); D1.set(1, 2, c.y); D1.set(2, 2, c.z); D1.set(3, 2, 1.0); 
			D1.set(0, 3, d.x); D1.set(1, 3, d.y); D1.set(2, 3, d.z); D1.set(3, 3, 1.0);

			D2.set(0, 0, a.x); D2.set(1, 0, a.y); D2.set(2, 0, a.z); D2.set(3, 0, 1.0);
			D2.set(0, 1, point.x); D2.set(1, 1, point.y); D2.set(2, 1, point.z); D2.set(3, 1, 1.0); 
			D2.set(0, 2, c.x); D2.set(1, 2, c.y); D2.set(2, 2, c.z); D2.set(3, 2, 1.0); 
			D2.set(0, 3, d.x); D2.set(1, 3, d.y); D2.set(2, 3, d.z); D2.set(3, 3, 1.0);

			D3.set(0, 0, a.x); D3.set(1, 0, a.y); D3.set(2, 0, a.z); D3.set(3, 0, 1.0);
			D3.set(0, 1, b.x); D3.set(1, 1, b.y); D3.set(2, 1, b.z); D3.set(3, 1, 1.0); 
			D3.set(0, 2, point.x); D3.set(1, 2, point.y); D3.set(2, 2, point.z); D3.set(3, 2, 1.0); 
			D3.set(0, 3, d.x); D3.set(1, 3, d.y); D3.set(2, 3, d.z); D3.set(3, 3, 1.0);

			D4.set(0, 0, a.x); D4.set(1, 0, a.y); D4.set(2, 0, a.z); D4.set(3, 0, 1.0);
			D4.set(0, 1, b.x); D4.set(1, 1, b.y); D4.set(2, 1, b.z); D4.set(3, 1, 1.0); 
			D4.set(0, 2, c.x); D4.set(1, 2, c.y); D4.set(2, 2, c.z); D4.set(3, 2, 1.0); 
			D4.set(0, 3, point.x); D4.set(1, 3, point.y); D4.set(2, 3, point.z); D4.set(3, 3, 1.0);

			double d0 = D0.det();
			double d1 = D1.det();
			double d2 = D2.det();
			double d3 = D3.det();
			double d4 = D4.det();

			ArrayList<Double> determantants = new ArrayList<Double>();

			determantants.add(d0);
			determantants.add(d1);
			determantants.add(d2);
			determantants.add(d3);
			determantants.add(d4);

			for (int i = 1; i < 5; i++)
			{
				// If one of them has a differing sign then the point isnt fully in the triangle
				if (!areSignsSame(determantants.get(0), determantants.get(i)) && determantants.get(i) != 0)
				{
					inThisTet = false;
				}
			}

			if (inThisTet)
			{
				retVal = false;
				break;